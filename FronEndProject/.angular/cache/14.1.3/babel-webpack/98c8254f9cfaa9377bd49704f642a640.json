{"ast":null,"code":"import _asyncToGenerator from \"F:/GITHUB/PERSONAL/FronEndProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BACKEND_URL } from \"../constants/backend\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nconst url = BACKEND_URL + '/api/Contact';\nexport class ContactService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n\n  getContactDetails(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield fetch(`${url}/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this.authService.getSession().token}`\n        }\n      });\n      return res.json();\n    })();\n  }\n\n  getContacts(contactsBookId) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(_this2.authService.getSession().token);\n      const data = yield fetch(`${url}/ContactsBook/${contactsBookId}`, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this2.authService.getSession().token}`\n        }\n      });\n      return data.json();\n    })();\n  }\n\n  save(contact) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(contact);\n      const res = yield fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this3.authService.getSession().token}`\n        },\n        body: JSON.stringify(contact)\n      });\n      console.log(res);\n    })();\n  }\n\n  deleteContact(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield fetch(`${url}/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this4.authService.getSession().token}`\n        }\n      });\n      return res.ok;\n    })();\n  }\n\n  updateContact(contact) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield fetch(`${url}/${contact.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(contact),\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this5.authService.getSession().token}`\n        }\n      });\n      return res.ok;\n    })();\n  }\n\n}\n\nContactService.ɵfac = function ContactService_Factory(t) {\n  return new (t || ContactService)(i0.ɵɵinject(i1.AuthService));\n};\n\nContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactService,\n  factory: ContactService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAAQA,WAAR,QAA0B,sBAA1B;;;AAGA,MAAMC,GAAG,GAAGD,WAAW,GAAG,cAA1B;AAKA,OAAM,MAAOE,cAAP,CAAqB;EAEzBC,YAAoBC,WAApB,EAA4C;IAAxB;EACnB;;EAGKC,iBAAiB,CAACC,EAAD,EAAW;IAAA;;IAAA;MAChC,MAAMC,GAAG,SAASC,KAAK,CAAC,GAAGP,GAAG,IAAIK,EAAE,EAAb,EAAiB;QACtCG,MAAM,EAAE,KAD8B;QAEtCC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,KAAI,CAACN,WAAL,CAAiBO,UAAjB,GAA8BC,KAAM;QAFxD;MAF6B,CAAjB,CAAvB;MAOA,OAAOL,GAAG,CAACM,IAAJ,EAAP;IARgC;EASjC;;EAEKC,WAAW,CAACC,cAAD,EAAwB;IAAA;;IAAA;MACvCC,OAAO,CAACC,GAAR,CAAY,MAAI,CAACb,WAAL,CAAiBO,UAAjB,GAA8BC,KAA1C;MACA,MAAMM,IAAI,SAASV,KAAK,CAAC,GAAGP,GAAG,iBAAiBc,cAAc,EAAtC,EAA0C;QAChEN,MAAM,EAAE,KADwD;QAEhEC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,MAAI,CAACN,WAAL,CAAiBO,UAAjB,GAA8BC,KAAM;QAFxD;MAFuD,CAA1C,CAAxB;MAOA,OAAOM,IAAI,CAACL,IAAL,EAAP;IATuC;EAUxC;;EAGKM,IAAI,CAACC,OAAD,EAAkB;IAAA;;IAAA;MAC1BJ,OAAO,CAACC,GAAR,CAAYG,OAAZ;MACA,MAAMb,GAAG,SAASC,KAAK,CAACP,GAAD,EAAM;QAC3BQ,MAAM,EAAE,MADmB;QAE3BC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,MAAI,CAACN,WAAL,CAAiBO,UAAjB,GAA8BC,KAAM;QAFxD,CAFkB;QAM3BS,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,OAAf;MANqB,CAAN,CAAvB;MAQAJ,OAAO,CAACC,GAAR,CAAYV,GAAZ;IAV0B;EAW3B;;EAEKiB,aAAa,CAAClB,EAAD,EAAW;IAAA;;IAAA;MAC5B,MAAMC,GAAG,SAASC,KAAK,CAAC,GAAGP,GAAG,IAAIK,EAAE,EAAb,EAAiB;QACtCG,MAAM,EAAE,QAD8B;QAEtCC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,MAAI,CAACN,WAAL,CAAiBO,UAAjB,GAA8BC,KAAM;QAFxD;MAF6B,CAAjB,CAAvB;MAQA,OAAOL,GAAG,CAACkB,EAAX;IAT4B;EAU7B;;EAEKC,aAAa,CAACN,OAAD,EAAkB;IAAA;;IAAA;MACnC,MAAMb,GAAG,SAASC,KAAK,CAAE,GAAGP,GAAG,IAAImB,OAAO,CAACd,EAAE,EAAtB,EAA0B;QAC/CG,MAAM,EAAE,KADuC;QAE/CY,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAFyC;QAG/CV,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,MAAI,CAACN,WAAL,CAAiBO,UAAjB,GAA8BC,KAAM;QAFxD;MAHsC,CAA1B,CAAvB;MASA,OAAOL,GAAG,CAACkB,EAAX;IAVmC;EAYpC;;AAnEwB;;;mBAAdvB,gBAAcyB;AAAA;;;SAAdzB;EAAc0B,SAAd1B,cAAc;EAAA2B,YAFb","names":["BACKEND_URL","url","ContactService","constructor","authService","getContactDetails","id","res","fetch","method","headers","getSession","token","json","getContacts","contactsBookId","console","log","data","save","contact","body","JSON","stringify","deleteContact","ok","updateContact","i0","factory","providedIn"],"sourceRoot":"","sources":["F:\\GITHUB\\PERSONAL\\FronEndProject\\src\\app\\core\\services\\contact.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {IContact} from '../interfaces/contact';\r\nimport {BACKEND_URL} from \"../constants/backend\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\nconst url = BACKEND_URL + '/api/Contact';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n\r\n  constructor(private authService: AuthService) {\r\n  }\r\n\r\n\r\n  async getContactDetails(id: number): Promise<IContact> {\r\n    const res = await fetch(`${url}/${id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\r\n      },\r\n    });\r\n    return res.json();\r\n  }\r\n\r\n  async getContacts(contactsBookId : number): Promise<IContact[]> {\r\n    console.log(this.authService.getSession().token!)\r\n    const data = await fetch(`${url}/ContactsBook/${contactsBookId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\r\n      }\r\n    });\r\n    return data.json();\r\n  }\r\n\r\n\r\n  async save(contact: IContact) {\r\n    console.log(contact)\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\r\n      },\r\n      body: JSON.stringify(contact),\r\n    });\r\n    console.log(res)\r\n  }\r\n\r\n  async deleteContact(id: number): Promise<boolean> {\r\n    const res = await fetch(`${url}/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\r\n      }\r\n    });\r\n\r\n    return res.ok;\r\n  }\r\n\r\n  async updateContact(contact: IContact): Promise<boolean> {\r\n    const res = await fetch (`${url}/${contact.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(contact),\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\r\n      }\r\n    });\r\n\r\n    return res.ok;\r\n\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}