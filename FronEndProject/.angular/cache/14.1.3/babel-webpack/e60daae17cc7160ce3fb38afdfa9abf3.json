{"ast":null,"code":"import _asyncToGenerator from \"F:/GITHUB/PERSONAL/FronEndProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nconst url = 'https://localhost:7042/api/Contact';\nexport class ContactService {\n  constructor() {}\n\n  getContactDetails(id) {\n    return _asyncToGenerator(function* () {\n      const res = yield fetch(url + id);\n      return res.json();\n    })();\n  }\n\n  getContacts(userId) {\n    return _asyncToGenerator(function* () {\n      const data = yield fetch(url + '/GetContacts/' + userId);\n      return data.json();\n    })();\n  }\n\n}\n\nContactService.ɵfac = function ContactService_Factory(t) {\n  return new (t || ContactService)();\n};\n\nContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactService,\n  factory: ContactService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAGA,MAAMA,GAAG,GAAG,oCAAZ;AAKA,OAAM,MAAOC,cAAP,CAAqB;EAEzBC,eAAgB;;EAGVC,iBAAiB,CAACC,EAAD,EAAW;IAAA;MAChC,MAAMC,GAAG,SAASC,KAAK,CAACN,GAAG,GAAGI,EAAP,CAAvB;MACA,OAAOC,GAAG,CAACE,IAAJ,EAAP;IAFgC;EAGjC;;EAEKC,WAAW,CAACC,MAAD,EAAe;IAAA;MAC9B,MAAMC,IAAI,SAASJ,KAAK,CAACN,GAAG,GAAG,eAAN,GAAwBS,MAAzB,CAAxB;MACA,OAAOC,IAAI,CAACH,IAAL,EAAP;IAF8B;EAG/B;;AAbwB;;;mBAAdN;AAAc;;;SAAdA;EAAcU,SAAdV,cAAc;EAAAW,YAFb","names":["url","ContactService","constructor","getContactDetails","id","res","fetch","json","getContacts","userId","data","factory","providedIn"],"sourceRoot":"","sources":["F:\\GITHUB\\PERSONAL\\FronEndProject\\src\\app\\core\\services\\contact.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Contact } from '../interfaces/contact';\r\n\r\nconst url = 'https://localhost:7042/api/Contact';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n\r\n  constructor() {}\r\n\r\n\r\n  async getContactDetails(id: number): Promise<Contact> {\r\n    const res = await fetch(url + id);\r\n    return res.json();\r\n  }\r\n\r\n  async getContacts(userId: number): Promise<Contact[]> {\r\n    const data = await fetch(url + '/GetContacts/' + userId);\r\n    return data.json();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}