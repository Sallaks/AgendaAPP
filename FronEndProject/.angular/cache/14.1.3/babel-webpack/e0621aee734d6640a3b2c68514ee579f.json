{"ast":null,"code":"import _asyncToGenerator from \"F:/GITHUB/PERSONAL/FronEndProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BACKEND_URL } from \"../constants/backend\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nconst url = BACKEND_URL + '/api/Contact';\nexport class ContactService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n\n  getContactDetails(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield fetch(`${url}/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this.authService.getSession().token}`\n        }\n      });\n      return res.json();\n    })();\n  }\n\n  getContacts() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(_this2.authService.getSession().token);\n      const data = yield fetch(url + '/all', {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this2.authService.getSession().token}`\n        }\n      });\n      return data.json();\n    })();\n  }\n\n  deleteContact(id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const data = yield fetch(`${url}/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this3.authService.getSession().token}`\n        }\n      });\n    })();\n  }\n\n}\n\nContactService.ɵfac = function ContactService_Factory(t) {\n  return new (t || ContactService)(i0.ɵɵinject(i1.AuthService));\n};\n\nContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactService,\n  factory: ContactService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAAQA,WAAR,QAA0B,sBAA1B;;;AAGA,MAAMC,GAAG,GAAGD,WAAW,GAAG,cAA1B;AAKA,OAAM,MAAOE,cAAP,CAAqB;EAEzBC,YAAoBC,WAApB,EAA4C;IAAxB;EACnB;;EAGKC,iBAAiB,CAACC,EAAD,EAAW;IAAA;;IAAA;MAChC,MAAMC,GAAG,SAASC,KAAK,CAAC,GAAGP,GAAG,IAAIK,EAAE,EAAb,EAAiB;QACtCG,MAAM,EAAE,KAD8B;QAEtCC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,KAAI,CAACN,WAAL,CAAiBO,UAAjB,GAA8BC,KAAM;QAFxD;MAF6B,CAAjB,CAAvB;MAOA,OAAOL,GAAG,CAACM,IAAJ,EAAP;IARgC;EASjC;;EAEKC,WAAW;IAAA;;IAAA;MACfC,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,WAAL,CAAiBO,UAAjB,GAA8BC,KAA1C;MACA,MAAMK,IAAI,SAAST,KAAK,CAACP,GAAG,GAAG,MAAP,EAAe;QACrCQ,MAAM,EAAE,KAD6B;QAErCC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,MAAI,CAACN,WAAL,CAAiBO,UAAjB,GAA8BC,KAAM;QAFxD;MAF4B,CAAf,CAAxB;MAOA,OAAOK,IAAI,CAACJ,IAAL,EAAP;IATe;EAUhB;;EAEKK,aAAa,CAACZ,EAAD,EAAW;IAAA;;IAAA;MAC5B,MAAMW,IAAI,SAAST,KAAK,CAAC,GAAGP,GAAG,IAAIK,EAAE,EAAb,EAAiB;QACvCG,MAAM,EAAE,QAD+B;QAEvCC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,MAAI,CAACN,WAAL,CAAiBO,UAAjB,GAA8BC,KAAM;QAFxD;MAF8B,CAAjB,CAAxB;IAD4B;EAQ7B;;AArCwB;;;mBAAdV,gBAAciB;AAAA;;;SAAdjB;EAAckB,SAAdlB,cAAc;EAAAmB,YAFb","names":["BACKEND_URL","url","ContactService","constructor","authService","getContactDetails","id","res","fetch","method","headers","getSession","token","json","getContacts","console","log","data","deleteContact","i0","factory","providedIn"],"sourceRoot":"","sources":["F:\\GITHUB\\PERSONAL\\FronEndProject\\src\\app\\core\\services\\contact.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Contact} from '../interfaces/contact';\r\nimport {BACKEND_URL} from \"../constants/backend\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\nconst url = BACKEND_URL + '/api/Contact';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n\r\n  constructor(private authService: AuthService) {\r\n  }\r\n\r\n\r\n  async getContactDetails(id: number): Promise<Contact> {\r\n    const res = await fetch(`${url}/${id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\r\n      },\r\n    });\r\n    return res.json();\r\n  }\r\n\r\n  async getContacts(): Promise<Contact[]> {\r\n    console.log(this.authService.getSession().token!)\r\n    const data = await fetch(url + '/all', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\r\n      }\r\n    });\r\n    return data.json();\r\n  }\r\n\r\n  async deleteContact(id: number): Promise<void> {\r\n    const data = await fetch(`${url}/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\r\n      }\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}