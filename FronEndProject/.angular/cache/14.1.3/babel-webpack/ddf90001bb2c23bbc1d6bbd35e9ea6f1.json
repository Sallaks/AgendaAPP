{"ast":null,"code":"import _asyncToGenerator from \"F:/GITHUB/PERSONAL/FronEndProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/contact.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../components/contact-card/contact-card.component\";\n\nfunction ContactsComponent_app_contact_card_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-contact-card\", 7);\n  }\n\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"contact\", contact_r1);\n  }\n}\n\nexport class ContactsComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.contacts = [];\n  }\n\n  ngOnInit() {\n    this.getContacts();\n  }\n\n  getContacts() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.contacts = yield _this.contactService.getContacts(1);\n    })();\n  }\n\n}\n\nContactsComponent.ɵfac = function ContactsComponent_Factory(t) {\n  return new (t || ContactsComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n};\n\nContactsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactsComponent,\n  selectors: [[\"app-contacts\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"main\"], [1, \"header\"], [1, \"search-container\"], [\"type\", \"text\", \"placeholder\", \"Buscar contactos\", 1, \"container-input\"], [\"src\", \"../../../../assets/icons/search.svg\", \"alt\", \"search\", 1, \"search\"], [1, \"contacts\"], [3, \"contact\", 4, \"ngFor\", \"ngForOf\"], [3, \"contact\"]],\n  template: function ContactsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"input\", 3)(4, \"img\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵtemplate(6, ContactsComponent_app_contact_card_6_Template, 1, 1, \"app-contact-card\", 6);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ContactCardComponent],\n  styles: [\".main[_ngcontent-%COMP%] {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  align-items: center;\\n  max-height: 100vh;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100vw;\\n}\\n\\n.search-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  box-sizing: border-box;\\n  padding: 12px 16px;\\n  gap: 6px;\\n  background: #FFFFFF;\\n  flex-direction: row-reverse;\\n  align-items: center;\\n  border-bottom: 0.2px solid rgba(50, 0, 229, 0.3);\\n  margin-bottom: 10px;\\n  width: calc(100vw - 20px);\\n}\\n\\n.search[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n  font-size: 24px;\\n}\\n\\n.container-input[_ngcontent-%COMP%] {\\n  border-color: transparent;\\n  flex: 1;\\n  font-size: 16px;\\n}\\n\\n.container-input[_ngcontent-%COMP%]:focus {\\n  outline: unset;\\n}\\n\\n.contacts[_ngcontent-%COMP%] {\\n  margin-right: auto;\\n  overflow-y: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3RzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0NBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0EsbUJBQUE7RUFDQSwyQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0RBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EsT0FBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7QUFDRiIsImZpbGUiOiJjb250YWN0cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluIHtcclxuICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXgtaGVpZ2h0OiAxMDB2aDtcclxufVxyXG5cclxuLmhlYWRlciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDB2dztcclxufVxyXG5cclxuLnNlYXJjaC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBwYWRkaW5nOiAxMnB4IDE2cHg7XHJcbiAgZ2FwOiA2cHg7XHJcbiAgYmFja2dyb3VuZDogI0ZGRkZGRjtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBib3JkZXItYm90dG9tOiAwLjJweCBzb2xpZCByZ2JhKDUwLCAwLCAyMjksIDAuMyk7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB3aWR0aDogY2FsYygxMDB2dyAtIDIwcHgpO1xyXG59XHJcblxyXG4uc2VhcmNoIHtcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG59XHJcblxyXG4uY29udGFpbmVyLWlucHV0IHtcclxuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIGZsZXg6IDE7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4uY29udGFpbmVyLWlucHV0OmZvY3VzIHtcclxuICBvdXRsaW5lOiB1bnNldDtcclxufVxyXG5cclxuLmNvbnRhY3RzIHtcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxufSJdfQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAUIA;;;;;IAAmDA;;;;ACDvD,OAAM,MAAOC,iBAAP,CAAwB;EAE5BC,YAAoBC,cAApB,EAAkD;IAA9B;IAEpB,gBAAsB,EAAtB;EAFuD;;EAIvDC,QAAQ;IACN,KAAKC,WAAL;EACD;;EAEKA,WAAW;IAAA;;IAAA;MACf,KAAI,CAACC,QAAL,SAAsB,KAAI,CAACH,cAAL,CAAoBE,WAApB,CAAgC,CAAhC,CAAtB;IADe;EAEhB;;AAZ2B;;;mBAAjBJ,mBAAiBD;AAAA;;;QAAjBC;EAAiBM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT9BX,+BAAkB,CAAlB,EAAkB,KAAlB,EAAkB,CAAlB,EAAkB,CAAlB,EAAkB,KAAlB,EAAkB,CAAlB;MAIMA,4BAA4E,CAA5E,EAA4E,KAA5E,EAA4E,CAA5E;MAGFA;MAEFA;MACEA;MACFA;;;;MADwCA;MAAAA","names":["i0","ContactsComponent","constructor","contactService","ngOnInit","getContacts","contacts","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\GITHUB\\PERSONAL\\FronEndProject\\src\\app\\public\\pages\\contacts\\contacts.component.html","F:\\GITHUB\\PERSONAL\\FronEndProject\\src\\app\\public\\pages\\contacts\\contacts.component.ts"],"sourcesContent":["<div class=\"main\">\r\n  <div class=\"header\">\r\n    <div class=\"search-container\">\r\n      <!--TODO: Estado activo e inactivo-->\r\n      <input type=\"text\" class=\"container-input\" placeholder=\"Buscar contactos\" />\r\n\r\n      <img class=\"search\" src=\"../../../../assets/icons/search.svg\" alt=\"search\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"contacts\">\r\n    <app-contact-card *ngFor=\"let contact of contacts\" [contact]=\"contact\"></app-contact-card>\r\n  </div>\r\n</div>\r\n<!--  <a routerLink=\"contact-details\">detail</a>-->\r\n<!--  <router-outlet></router-outlet>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Contact } from 'src/app/core/interfaces/contact';\r\nimport { ContactService } from 'src/app/core/services/contact.service';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.scss']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n\r\n  constructor(private contactService: ContactService) { }\r\n\r\n  contacts: Contact[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.getContacts();\r\n  }\r\n\r\n  async getContacts() {\r\n    this.contacts = await this.contactService.getContacts(1);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}