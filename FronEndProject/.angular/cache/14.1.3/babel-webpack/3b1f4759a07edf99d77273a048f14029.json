{"ast":null,"code":"import _asyncToGenerator from \"F:/GITHUB/PERSONAL/FronEndProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BACKEND_URL } from \"../constants/backend\";\nconst url = BACKEND_URL + '/api/ContactsBook';\nexport class ContatcsBookService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n\n  getAllContactsBooksByUser() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const data = yield fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${_this.authService.getSession().token}`\n        }\n      });\n      return data.json();\n    })();\n  }\n\n}","map":{"version":3,"mappings":";AAKA,SAAQA,WAAR,QAA0B,sBAA1B;AAMA,MAAMC,GAAG,GAAGD,WAAW,GAAG,mBAA1B;AAEA,OAAM,MAAOE,mBAAP,CAA0B;EAG9BC,YAAoBC,WAApB,EAA4C;IAAxB;EAA6B;;EAG3CC,yBAAyB;IAAA;;IAAA;MAC7B,MAAMC,IAAI,SAASC,KAAK,CAACN,GAAD,EAAM;QAC5BO,MAAM,EAAE,KADoB;QAE5BC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,UAAU,KAAI,CAACL,WAAL,CAAiBM,UAAjB,GAA8BC,KAAM;QAFxD;MAFmB,CAAN,CAAxB;MAOA,OAAOL,IAAI,CAACM,IAAL,EAAP;IAR6B;EAS9B;;AAf6B","names":["BACKEND_URL","url","ContatcsBookService","constructor","authService","getAllContactsBooksByUser","data","fetch","method","headers","getSession","token","json"],"sourceRoot":"","sources":["F:\\GITHUB\\PERSONAL\\FronEndProject\\src\\app\\core\\services\\contatcs-book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {IContact} from \"../interfaces/contact\";\nimport {IContactsbook} from \"../interfaces/contacts-book\";\nimport * as url from \"url\";\nimport {BACKEND_URL} from \"../constants/backend\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nconst url = BACKEND_URL + '/api/ContactsBook';\n\nexport class ContatcsBookService {\n\n\n  constructor(private authService: AuthService) { }\n\n\n  async getAllContactsBooksByUser() : Promise<IContactsbook[]>{\n    const data = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `Bearer ${this.authService.getSession().token!}`\n      }\n    });\n    return data.json();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}