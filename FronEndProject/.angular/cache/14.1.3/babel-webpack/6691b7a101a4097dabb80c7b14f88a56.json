{"ast":null,"code":"import _asyncToGenerator from \"F:/GITHUB/PERSONAL/FronEndProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class PermissionsGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n\n  canActivate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const isAuthenticated = yield _this.authService.isAuthenticated();\n      console.log(isAuthenticated);\n\n      if (!isAuthenticated) {\n        yield _this.router.navigate(['login']);\n        return false;\n      }\n\n      return true;\n    })();\n  }\n\n}\n\nPermissionsGuard.ɵfac = function PermissionsGuard_Factory(t) {\n  return new (t || PermissionsGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n\nPermissionsGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PermissionsGuard,\n  factory: PermissionsGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAA6CA,MAA7C,QAAwF,iBAAxF;;;;AAOA,OAAM,MAAOC,gBAAP,CAAuB;EAC3BC,YAAmBC,WAAnB,EAAoDC,MAApD,EAAkE;IAA/C;IAAiC;EAAkB;;EAEhEC,WAAW;IAAA;;IAAA;MACf,MAAMC,eAAe,SAAS,KAAI,CAACH,WAAL,CAAiBG,eAAjB,EAA9B;MACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;;MACA,IAAI,CAACA,eAAL,EAAsB;QACpB,MAAM,KAAI,CAACF,MAAL,CAAYK,QAAZ,CAAqB,CAAC,OAAD,CAArB,CAAN;QACA,OAAO,KAAP;MACD;;MACD,OAAO,IAAP;IAPe;EAQhB;;AAX0B;;;mBAAhBR,kBAAgBS;AAAA;;;SAAhBT;EAAgBU,SAAhBV,gBAAgB;EAAAW,YAFf","names":["Router","PermissionsGuard","constructor","authService","router","canActivate","isAuthenticated","console","log","navigate","i0","factory","providedIn"],"sourceRoot":"","sources":["F:\\GITHUB\\PERSONAL\\FronEndProject\\src\\app\\core\\guards\\permissions.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionsGuard implements CanActivate {\n  constructor(public authService: AuthService, public router: Router) {}\n\n  async canActivate(): boolean {\n    const isAuthenticated = await this.authService.isAuthenticated()\n    console.log(isAuthenticated)\n    if (!isAuthenticated) {\n      await this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}